doctype html
html(lang="en")
  head
    meta(charset="utf-8")

    title Automate ALL THE THINGS!!!

    meta(name="description", content="Git Tricks")
    meta(name="author", content="Genadi Samokovarov")

    link(rel="stylesheet", href="vendor/reveal.js/css/reveal.css")
    link(rel="stylesheet", href="vendor/reveal.js/css/theme/simple.css")
    link(rel="stylesheet", href="vendor/github.css")

    style.

      #person {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
      }

      #person.genadi { background-color: red; }
      #person.stan { background-color: lime; }

      .reveal,
      .reveal h1,
      .reveal h2,
      .reveal h3,
      .reveal h4,
      .reveal h5,
      .reveal h6 { font-family: Palatino, Georgia, serif; }

      .reveal h1 { font-size: 2.2em; text-shadow: none; }
      .reveal h2 { font-size: 1.9em; }
      .reveal h3 { font-size: 1.8em; }
      .reveal h4 { font-size: 1.5em; }
      .reveal h5 { font-size: 1.2em; }

      .reveal .light { color: #fff; }
      .reveal .big { font-size: 1.9em; }

      .reveal pre.inline { box-shadow: none; }
      .reveal img.inline { background: transparent; border: 0; box-shadow: none; margin: 0; vertical-align: middle; }

      .reveal a.image { text-decoration: none; }
      .reveal a:hover img.inline { background: transparent; border: 0; box-shadow: none; }

      .reveal .hidden { visibility: hidden; }

      .reveal .progress span { background: #666; }

      .reveal pre code { font-size: 150%; line-height: 100%; }

      .reveal .code-split { overflow: hidden; }
      .reveal .code-split .left { float: left; width: 49.5%; }
      .reveal .code-split .right { float: right; width: 49.5%; }
      .reveal .code-split .left pre,
      .reveal .code-split .right pre { margin: 0; width: 100%; box-sizing: border-box; }
      .reveal .code-split .left pre code,
      .reveal .code-split .right pre, code { max-height: auto; min-height: 720px; }

  body
    div.reveal
      div.slides
        section(data-transition="none")
          p: img(class="inline" src="assets/images/automate.jpg" style="min-width: 100%;")

        section

          section(data-background="#000000")
            h1.light Кои сме ние?

          section.genadi
            h2 Генади Самоковаров
            h3 <a href="http://github.com/gsamokovarov">@gsamokovarov</a>
            br
            p
              a(href="http://gsamokovarov.com"): img(class="inline spin" src="assets/images/genadi.png")

          section.stan
            h2 Стан{,имир} Ангело{в,ff}
            h3 <a href="http://github.com/StanAngeloff">@StanAngeloff</a>
            br
            ul
              li Пише код.
              li Обича <strike>бяло</strike> червено вино <strike>(без мярка)</strike>.
              li Не търпи глупави хора.

          section(data-background="#000000").genadi
            h1.light Какво <u>няма</u> да има в нашата презентация?

          section.genadi
            h2 Няма да говорим за build&nbsp;tools.
            br
            p Това не е презентация за:
            ul
              li <code>make</code>, <code>rake</code>, <code>grunt</code>
              li <code>gulp</code>
            br
            br
            p: em whatever you crazy kids use these days&hellip;

          section(data-background="#000000").stan
            h1.light Какво <u>ще има</u> в нашата презентация?

          section.stan
            h2 Ще говорим за автоматизиране на съвръри.
            p.fragment Всекидневни задачи,
            p.fragment Дълги и досадни задачи,
            p.fragment &hellip;или как да си подкарам Ruby-то на съвръра.

        section

          section(data-background="#000000").genadi
            h1.light Защо автоматизация?

          section( data-transition="none").genadi
            p Генади мрази да конфигурира сървъри.
            p Станимир мрази да конфигурира сървъри.
            p.fragment Генади и Станимир <strong>много мразят</strong> да конфигурират сървъри.

          section(data-background="assets/images/batman.png").genadi
            h1.light IT SUCKS BIG TIME!!!
            br
            br
            br
            br

          section(data-background="#000000").stan
            h2.light Мит: Автоматизация само за големи проекти

          section.stan(data-background="assets/images/pfff.gif")
            aside.notes.
              Не, не е, нашето демо ще 3 реда код на Python.
              Дори малък проект носи със себе си много dependencies, от OS-ниво до софтуер...

          section.stan
            h1 Защо автоматизация? <small>(продължение&hellip;)</small>
            br
            p.fragment Когато машината и dependencies еволюират, много <nobr>по-лесно</nobr> е да ги документираш.
            br
            p.fragment Автоматизацията е като документация за машината&hellip; особено когато имате повече от една машина.

          section.genadi
            h1 Защо автоматизация? <small>(продължение&hellip;)</small>
            br
            p.fragment Reproducibility &mdash; няма разминаване в средите
            p.fragment Генади работи с Python3, Стан с Python2
            p.fragment: cite: em Ама при мен работи?!

          section
            p: img(class="inline" src="assets/images/flip.png" style="min-width: 100%;")

        section(data-transition="none")
          section(data-background="#000000" data-transition="none").stan
            h1.light Време за демо

          section(data-background="#000000").stan
            h2.light Ansible
            p.light <big>★</big> 5, 276 stars
            p.light <big>⟳</big> 9, 851 commits
            p.light <big>&nbsp;</big> 35 releases
            p.light <big>&nbsp;</big> 644 contributors

          section(data-background="#000000").stan
            <script type="text/javascript" src="https://asciinema.org/a/8452.js" id="asciicast-8452" data-size="big" data-speed="16" async></script>

          section(data-background="#000000").genadi
            h2.light Puppet
            p.light <big>★</big> 1, 971 stars
            p.light <big>⟳</big> 15688 commits
            p.light <big>&nbsp;</big> 276 releases
            p.light <big>&nbsp;</big> 274 contributors

          section(data-background="#000000").genadi
            <script type="text/javascript" src="https://asciinema.org/a/8545.js" id="asciicast-8545" data-size="big" data-speed="16" async></script>

        section

          section(data-background="#000000").genadi
            h1.light Какво автоматизирахме?

          section.genadi
            h2 Едно &ldquo;малко&rdquo; <nobr>Python приложение</nobr>
            pre
              code.python(data-trim).
                def application(env, start_response):
                    start_response('200 OK', [('Content-Type', 'text/html')])
                    return [b"Hello Rogue!"]

          section.genadi
            ul
              li Nginx (from PPA)
              li Python 3.2, <code>pip</code>
              li uWSGI (application server)
              li Upstart jobs

          section.stan
            h3 А преди това&hellip;
            ul
              li Ubuntu 12.04, x64
              li SSH server
              li Reasonable security
              li Date/time, locale, etc.
              li <code>build-essential</code>
            br
            br
            p.fragment &hellip;за три реда код.

          section(data-background="assets/images/crying.gif").stan
            h2.light Y U NO<br>INSTALL YOURSELF
            br
            br
            br

        section

          section(data-background="#000000").genadi
            h1.light Време за код

          section(data-transition="none").genadi
            h2 Конфигуриране на Python
            div.code-split
              div.left
                pre
                  code.yml(data-trim).
                    - name: Install packages
                      apt: >
                        pkg={{ item }}
                        state=present
                      with_items:
                        - 'python{{ python_version }}'
                        - 'python{{ python_version }}-dev'

                    - name: Check if pip is installed
                      command: >
                        which {{ pip_executable }}
                      register: pip_installed
                      changed_when: false
                      ignore_errors: true

                    - name: Install pip
                      shell: >
                        wget -qO- https://raw.github.com/pypa/pip/master/contrib/get-pip.py | {{ python_executable }}
                      when: pip_installed | failed

              div.right
                pre
                  code.puppet(data-trim).
                    package {
                      [
                        "python${version}",
                        "python${version}-dev"
                      ]:
                    }


                    -> exec { "wget -qO- https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python${version}":
                      path   => ['/usr/bin', '/bin'],
                      unless => "which pip 2>&1 1>/dev/null"
                    }

          section(data-transition="none").stan
            h2 Конфигуриране на uWSGI
            div.code-split
              div.left
                pre
                  code.yml(data-trim).
                    - name: Insall uWSGI
                      pip: >
                        executable={{ pip_executable }}
                        name=uwsgi
                        state=present

                    - name: Install Upstart script for uWSGI Emperor
                      template: src=uwsgi.conf.j2 dest=/etc/init/uwsgi.conf

                    - name: Create uWSGI Emperor configuration directory
                      file: >
                        path=/etc/uwsgi/vassals/
                        state=directory recurse=yes

                    - name: Create vassal configuration
                      template: >
                        src=vassal.ini.j2
                        dest=/etc/uwsgi/vassals/{{ uwsgi_vassal_name }}.ini
                      notify: restart uwsgi

                    - name: Start uWSGI Emperor
                      service: name=uwsgi state=started enabled=yes

              div.right
                pre
                  code.puppet(data-trim).
                    package { 'uwsgi':
                      provider => 'pip',
                      require  => Package['build-essential']
                    }


                    file {
                      '/etc/init/uwsgi.conf':
                        source => 'puppet:///modules/uwsgi/uwsgi.conf';

                      ['/etc/uwsgi', '/etc/uwsgi/vassals']:
                        ensure => directory;

                      "/etc/uwsgi/vassals/${vassal_name}.ini":
                        content => template('uwsgi/vassal.ini.erb'),
                        notify  => Service['uwsgi'];
                    }


                    service { 'uwsgi':
                      ensure  => running,
                      enable  => true,
                      require => [Package['uwsgi'], File['/etc/init/uwsgi.conf']]
                    }

          section(data-transition="none").stan
            h2 Инсталиране на Nginx
            div.code-split
              div.left
                pre
                  code.yml(data-trim).
                    - name: 'Add PPA for stable releases'
                      apt_repository:
                        repo='ppa:nginx/stable'
                        update_cache=true

                    - name: 'Install packages'
                      apt:
                        pkg=nginx
                        state=latest

              div.right
                pre
                  code.puppet(data-trim).
                    apt::ppa { 'ppa:nginx/stable': }




                    -> package { 'nginx':
                      ensure => latest
                    }

          section(data-transition="none").stan
            h2 Конфигуриране на Nginx
            div.code-split
              div.left
                pre
                  code.yml(data-trim).
                    - name: Create site configuration
                      template: >
                        src=site.conf.j2
                        dest=/etc/nginx/sites-available/{{ nginx_site_name }}
                      notify: restart nginx

                    - name: Disable default site
                      file: >
                        path=/etc/nginx/sites-enabled/default
                        state=absent
                      notify: restart nginx

                    - name: Enable custom site
                      file: >
                        path=/etc/nginx/sites-enabled/{{ nginx_site_name }}
                        src=/etc/nginx/sites-available/{{ nginx_site_name }}
                        state=link
                      notify: restart nginx

              div.right
                pre
                  code.puppet(data-trim).
                    file {
                      '/etc/nginx/sites-enabled/default':
                        require => Package['nginx'],
                        notify  => Service['nginx'],
                        ensure  => absent;

                      "/etc/nginx/sites-enabled/${site_name}":
                        require => Package['nginx'],
                        notify  => Service['nginx'],
                        ensure  => link,
                        target  => "/etc/nginx/sites-available/${site_name}";

                      "/etc/nginx/sites-available/${site_name}":
                        require => Package['nginx'],
                        notify  => Service['nginx'],
                        content => template('nginx/site.conf.erb')
                    }


          section(data-transition="none").genadi
            h2 Конфигуриране на Nginx
            div.code-split
              div.left
                pre
                  code.yml(data-trim).
                    - name: Create site configuration
                      template: >
                        src=site.conf.j2
                        dest=/etc/nginx/sites-available/{{ nginx_site_name }}
                      notify: restart nginx

                    - name: Disable default site
                      file: >
                        path=/etc/nginx/sites-enabled/default
                        state=absent
                      notify: restart nginx

                    - name: Enable custom site
                      file: >
                        path=/etc/nginx/sites-enabled/{{ nginx_site_name }}
                        src=/etc/nginx/sites-available/{{ nginx_site_name }}
                        state=link
                      notify: restart nginx

              div.right
                pre
                  code.puppet(data-trim).
                    file {
                      '/etc/nginx/sites-enabled/default':
                        ensure => absent;

                      "/etc/nginx/sites-enabled/${site_name}":
                        ensure => link,
                        target => "/etc/nginx/sites-available/${site_name}";

                      "/etc/nginx/sites-available/${site_name}":
                        content => template('nginx/site.conf.erb')
                    }

                    File {
                      require => Package['nginx'],
                      notify  => Service['nginx']
                    }


          section(data-transition="none").genadi
            h2 Конфигуриране на Nginx
            div.code-split
              div.left
                pre
                  code.yml(data-trim).
                    - name: Start nginx
                      service: >
                        name=nginx
                        state=started
                        enabled=yes

              div.right
                pre
                  code.puppet(data-trim).
                    service { 'nginx':
                      ensure  => running,
                      enable  => true,
                      require => Package['nginx']
                    }

          section.stan
            h2 Източници на Конфигурация
            div.code-split.fragment
              div.left
                pre
                  code(data-trim).
                    roles/nginx/defaults/main.yml
                    group_vars/webservers
                    inventory/servers.ini
                    Modules (Amazon, DO)
                    Local Facts
                    Playbook
                    Environment
                    Command-line
              div.right
                pre
                  code(data-trim).
                    Hiera
                    Facts
                    Environment
                    Global Variables?

          section.genadi
            h2 И още малко&hellip;
            ul
              li.fragment
                p Libraries / Repositories with re-usable code
                p.fragment Нож с две остриета.
              li.fragment Secure password &amp; secret management

        section

          section(data-background="#000000").genadi
            h1.light Оправдания<br><small><nobr>(да не автоматизираме)</nobr></small>

          section.genadi
            p: cite: em Ще отнеме много време да се направи.

          section.genadi
            p: cite: em Не е моя работа, има си devops, да се оправят.

          section.stan
            p: img(class="inline" src="assets/images/is_it_worth_the_time.png" style="min-width: 100%;")

          section.stan
            p: cite: em Ще си ползвам Heroku-то, там всичко работи.

        section
          section(data-background="#000000")
            h1.light Ресурси

          section.stan
            h2 Ansible
            br
            ul
              li: a(href="http://docs.ansible.com/intro.html") Introduction
              li: a(href="http://docs.ansible.com/list_of_all_modules.html") Modules Reference
              li: a(href="https://galaxy.ansible.com/explore") Ansible Galaxy

          section.genadi
            h2 Puppet
            br
            ul
              li: a(href="http://docs.puppetlabs.com/") Документация
              li: a(href="https://forge.puppetlabs.com/") Puppet Forge
              li: a(href="http://librarian-puppet.com/") Librarian Puppet
              li: a(href="http://boxen.github.com/") Boxen

          section.genadi
            h2 Oще
            br
            ul
              li: a(href="https://github.com/RogueDudes/automate-all-the-things") RogueDudes/automate-all-the-things
              li: a(href="https://github.com/RogueDudes/roguedudes.github.io") RogueDudes/roguedudes.github.io
              br
              li: a("http://redmonk.com/sogrady/2013/12/06/configuration-management-2013/") Community Metrics

        section(data-background="assets/images/sleepin.gif")
          h1.light Въпроси &nbsp;&amp;&nbsp; Отговори

          aside.notes
            ul
              li
                strong Защо не Bash скриптове?
                br
                p Голяма болка, особено когато скриптът стане 1, 000+ реда spaghetti code.
                br
                p Idempotence е важен, това в Bash е ръчна задача и трябва вие да я предвидите.
                p Ако имате вече голямо library, започнете като го автоматизирате, но не оставяйте нещата до там.
              li
                strong Защо не Chef?
                br
                p Нищо лично, но нямаме опит с него, вероятно е cool.

    div.indicator
      div#person

    script(src="vendor/reveal.js/lib/js/head.min.js")
    script(src="vendor/reveal.js/js/reveal.js")
    script(src="vendor/jquery.js")

    script.
      Reveal.initialize({
        width: 1440,
        height: 1050,
        margin: 0,
        controls: false,
        progress: true,
        history: true,
        center: true,
        rollingLinks: true,
        transition: 'linear',
        backgroundTransition: 'none',
        dependencies: [
          {
            src: 'vendor/reveal.js/plugin/highlight/highlight.js',
            async: true,
            callback: function() {
              hljs.initHighlightingOnLoad();
            }
          }
        ]
      });

      var previous = null, $person = $('#person');
      setInterval(function() {
        var $present = $('section.present');
        if ($present.hasClass('genadi') && previous !== 'genadi') {
          $person.removeClass(previous).addClass(previous = 'genadi');
        } else if ($present.hasClass('stan') && previous !== 'stan') {
          $person.removeClass(previous).addClass(previous = 'stan');
        }
      }, 125);
